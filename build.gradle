/*
 * Copyright 2021 CodeMC.io
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial
 * portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

plugins {
    id "java"
    id "application"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "jacoco"
}

group 'io.codemc'
version '2.1.0'

compileJava.options.encoding('UTF-8')

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.codemc.io/repository/codemc' }
    maven { url = 'https://repo.codemc.io/repository/codemc' }
    maven { url = 'https://m2.chew.pro/releases' }
    maven { url = 'https://m2.coly.dev/releases' }
}

dependencies {
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.16'
    implementation(group: 'net.dv8tion', name: 'JDA', version:'5.2.3'){
        exclude(module: 'opus-java')
    }
    implementation group: 'pw.chew', name: 'jda-chewtils-commons', version: '2.0'
    implementation group: 'pw.chew', name: 'jda-chewtils-command', version: '2.0'
    implementation group: 'org.spongepowered', name: 'configurate-gson', version: '4.1.2'

    implementation group: 'io.codemc.api', name: 'codemc-api', version: '1.2.0'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.10.1'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-json', version: '1.8.0'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.5.1'
    implementation group: 'org.jetbrains.exposed', name: 'exposed-core', version: '0.58.0'
    implementation group: 'org.jetbrains.exposed', name: 'exposed-jdbc', version: '0.58.0'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.11.4'
    testImplementation group: 'dev.coly', name: 'JDATesting', version: '0.7.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.15.2'
}

tasks {
    clean {
        delete "logs"
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
            showStandardStreams = true
        }

        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test

        reports {
            csv.required = false

            xml.required = true
            xml.outputLocation = layout.buildDirectory.file("jacoco.xml").get().asFile

            html.required = true
            html.outputLocation = layout.buildDirectory.dir("jacocoHtml").get().asFile
        }
    }
}

artifacts {
    archives(shadowJar)
}

shadowJar {
    archiveFileName = "CodeMC-Bot.jar"
}

application {
    mainClassName = 'io.codemc.bot.CodeMCBot'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}